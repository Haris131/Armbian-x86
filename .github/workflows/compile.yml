name: Build Armbian uefi-x86 Board
  
on:  
  workflow_dispatch:  
    inputs:  
      BOARD:  
        description: 'Board type'  
        required: true 
        default: 'uefi-x86'
        type: choice
        options:
          - all
          - uefi-x86
      BRANCH:  
        description: 'Armbian branch'  
        default: 'current'  
        required: false 
        type: choice 
        options:
          - current
          - legacy
          - edge
      RELEASE:  
        description: 'Release name' 
        default: 'jammy'
        required: true  
        type: choice
        options:
          - jammy
          - bookworm
          - noble
          - bullseye
      BUILD_DESKTOP:  
        description: 'Build desktop environment'  
        default: 'no'  
        required: false  
        type: choice
        options:
          - no
      COMPRESS_OUTPUTIMAGE:  
        description: 'Compress output image'  
        default: 'xz'  
        required: false  
        type: string  

env:
  TZ: Asia/Jakarta
  
jobs:  
  build-armbian:  
    permissions:
      contents: write
    runs-on: ubuntu-22.04  
    steps:  
      - name: Checkout  
        uses: actions/checkout@v3    

      - name: Initialization environment
        id: init
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker_images_ids=$(docker images -q)
          if [ -n "$docker_images_ids" ]; then
            docker rmi $docker_images_ids
          fi
          docker image prune -a -f
          sudo -E apt-get -y purge azure-cli ghc* zulu* llvm* firefox google* dotnet* openjdk* mysql* php* mongodb* dotnet* moby* snapd* android* || true
          sudo -E apt-get -qq autoremove --purge
          sudo -E apt-get -qq clean
          sudo timedatectl set-timezone "${TZ}"
          sudo mkdir -p /mnt/workdir
          sudo chown $USER:$GROUPS /mnt/workdir
          df -Th
  
      - name: Download source code
        working-directory: /mnt/workdir
        run: |
          df -hT ${PWD}
          git clone -q --single-branch --depth=1 --branch=v25.5.1 https://github.com/armbian/build.git build
          ln -sf /mnt/workdir/build $GITHUB_WORKSPACE/build
          echo -n 25.05.1 > build/VERSION
  
      - name: Compile Armbian [ ${{ inputs.BOARD }} ${{ inputs.RELEASE }} ] 
        run: |
          cd build/
          echo "Compiling for board: $BOARD"
          ./compile.sh BOARD=$BOARD RELEASE=${{ inputs.RELEASE }} BRANCH=${{ inputs.BRANCH }} \
          BUILD_MINIMAL=no BUILD_DESKTOP=${{ inputs.BUILD_DESKTOP }} KERNEL_CONFIGURE=no \
          COMPRESS_OUTPUTIMAGE=${{ inputs.COMPRESS_OUTPUTIMAGE }}
      
      - name: Set current year and month  
        run: |  
          echo "CURRENT_YEAR_MONTH=$(date +'%Y%m')" >> $GITHUB_ENV  

      - name: Prepare Release Metadata
        run: |
          latest_image=$(ls ${{ github.workspace }}/build/output/images/Armbian-unofficial_*.img.xz | sort -V | tail -n 1)
          version=$(echo "$latest_image" | cut -d'_' -f2)  
          echo "VERSION=$version" >> $GITHUB_ENV
        
      - name: Upload image to Release  
        if: success() 
        uses: ncipollo/release-action@main
        with:  
          tag: "Armbian_${{ github.event.inputs.Version }}_${{ github.event.inputs.RELEASE }}_${{ env.CURRENT_YEAR_MONTH }}"
          name: "Armbian_${{ github.event.inputs.Version }}_${{ github.event.inputs.RELEASE }}_${{ env.CURRENT_YEAR_MONTH }}"
          artifacts: "${{ github.workspace }}/build/output/images/*"
          allowUpdates: true
          removeArtifacts: false
          replacesArtifacts: true
          body: |  
            ### Armbian Image Information  
            - Release: ${{ github.event.inputs.RELEASE }}    
            - Version: ${{ env.VERSION }}  
            ### Armbian Image Verification  
            - sha256sum   
          draft: false  
          prerelease: false  
